// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetAncestorsData, GetAncestorsResponse, GetChildrenData, GetChildrenResponse, PingData, PingResponse, GetRootData, GetRootResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class UmbTreeClientService {
    public static getAncestors<ThrowOnError extends boolean = true>(options?: Options<GetAncestorsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetAncestorsResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/umbtreeclient/api/v1/Ancestors',
            ...options
        });
    }
    
    public static getChildren<ThrowOnError extends boolean = true>(options?: Options<GetChildrenData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetChildrenResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/umbtreeclient/api/v1/Children',
            ...options
        });
    }
    
    public static ping<ThrowOnError extends boolean = true>(options?: Options<PingData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<PingResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/umbtreeclient/api/v1/ping',
            ...options
        });
    }
    
    public static getRoot<ThrowOnError extends boolean = true>(options?: Options<GetRootData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetRootResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/umbtreeclient/api/v1/root',
            ...options
        });
    }
    
}